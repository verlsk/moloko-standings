{"version":3,"sources":["entities/Team.js","modules/TeamsReader.js","entities/TeamsWrapper.js","entities/Match.js","entities/RoundsList.js","modules/MatchesReader.js","entities/MatchesWrapper.js","entities/TeamStatics.js","modules/StaticsBuilder.js","modules/StandingsBuilder.js","App.js","reportWebVitals.js","index.js"],"names":["Team","name","this","TeamsReader","a","fetch","response","text","t","data","split","teams_list","push","console","error","TeamsWrapper","teams","i","getName","Match","team1","team2","goals1","goals2","round","date","RoundsList","MatchesReader","teamsWrapper","matches","line","parseInt","line_array","getTeamByName","MatchesWrapper","match","TeamStatics","team","goals_fav","goals_against","ties","def","vict","goals_diff","points","StaticsBuilder","matchesWrapper","mapTeams","Map","teamsArray","set","j","includes","stats","get","addResult","forEach","element","sortReducer","state","action","type","column","slice","reverse","direction","_","sortBy","Error","Standings","tableData","React","useReducer","dispatch","useState","selectedTeam","useEffect","Table","sortable","celled","fixed","unstackable","Header","Row","HeaderCell","width","sorted","onClick","style","textOverflow","Body","map","Cell","fontWeight","age","gender","App","setStats","loadResources","length","tempStats","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.633ae59b.chunk.js","sourcesContent":["export class Team {    \n    constructor(name) {\n        this.name = name;\n    }\n\n    getName() {\n        return this.name;\n    }\n}","import { Team } from \"../entities/Team\";\nexport const TeamsReader = async () => {\n    try {\n        const response = await fetch(\"https://verlsk.github.io/moloko-standings/resources/Equipos.txt\");\n        const data = (await response.text()).split(\"\\n\");\n        var teams_list = [];\n        for (let t in data) {\n            teams_list.push(new Team(data[t]));\n        }\n\n        return teams_list;\n    } catch (err) {\n        console.error(err);\n    }\n\n}","export class TeamsWrapper {\n    constructor(teams) {\n        this.teams = teams;\n    }\n\n    getTeamByName(name) {\n        for (var i in this.teams) {\n            if (this.teams[i].getName() === name) {\n                return this.teams[i];\n            }\n        }\n    }\n}","export class Match {\n    constructor(team1, team2, goals1, goals2, round, date) {\n        this.team1 = team1;\n        this.team2 = team2;\n        this.goals1 = goals1;\n        this.goals2 = goals2;\n        this.round = round;\n        this.date = date;\n    }\n\n    getResult() {\n        return this.team1.getName() + \" \" + this.goals1 + \" - \" + this.goals2 + \" \" + this.team2.getName();\n    }\n\n    getRound() {\n        return this.round;\n    }\n\n    getTeams() {\n        return [this.team1, this.team2];\n    }\n\n    getGoals() {\n        return [this.goals1, this.goals2];\n    }\n\n}","export const RoundsList = [\n    \"Jornada1.txt\",\n    \"Jornada2.txt\",\n    \"Jornada3.txt\"\n]","import { Match } from \"../entities/Match\";\nimport { RoundsList } from \"../entities/RoundsList\";\n\nexport const MatchesReader = async (teamsWrapper) => {\n    try {\n        var matches = [];\n        for (var i in RoundsList) {\n            let fileName = RoundsList[i];\n            let name = \"https://verlsk.github.io/moloko-standings/resources/\" + fileName;\n            const response = await fetch(name);\n            const data = (await response.text()).split(\"\\n\");\n            \n            var round = 0;\n            var date = 0;\n            for (let t in data) {\n                var line = data[t];\n                if (t === \"0\") {\n                    round = parseInt(line.split(\" \")[1]);\n                    date = line.split(\" \")[2].split(\"(\")[1].split(\")\")[0];\n                }\n                else {\n                    var line_array = line.split(\"\\t\");\n                    var team1 = teamsWrapper.getTeamByName(line_array[1]);\n                    var team2 = teamsWrapper.getTeamByName(line_array[2]);\n                    var goals1 = parseInt(line_array[3]);\n                    var goals2 = parseInt(line_array[5]);\n                    matches.push(new Match(team1, team2, goals1, goals2, round, date));\n                }\n            }\n        }\n        \n\n        return matches;\n\n    } catch (err) {\n        console.error(err);\n    }\n\n}","export class MatchesWrapper {\n    constructor(matches) {\n        this.matches = matches;\n    }\n\n    addMatch(match) {\n        this.matches.push(match);\n    }\n}","export class TeamStatics {\n    constructor(team) {\n        this.team = team;\n        this.goals_fav = 0;\n        this.goals_against = 0;\n        this.ties = 0;\n        this.def = 0;\n        this.vict = 0;\n        this.goals_diff = 0;\n        this.points = 0;\n    }\n\n    addResult(goals_fav, goals_against) {\n        this.goals_fav += goals_fav;\n        this.goals_against += goals_against;\n        if (goals_fav > goals_against) {\n            this.vict++;\n        }\n        else if (goals_fav < goals_against) {\n            this.def++;\n        }\n        else {\n            this.ties++\n        }\n        this.goals_diff = this.goals_fav - this.goals_against;\n        this.points = this.vict*3 + this.ties;\n    }\n}","import { TeamStatics } from \"../entities/TeamStatics\";\n\nexport const StaticsBuilder = (teamsWrapper, matchesWrapper) => {\n    const mapTeams = new Map();\n    let teamsArray =  [];\n    for (var i in teamsWrapper.teams) {\n        mapTeams.set(teamsWrapper.teams[i].getName(), new TeamStatics(teamsWrapper.teams[i]))\n    }\n\n    for (var j in matchesWrapper.matches) {    \n        let match = matchesWrapper.matches[j];\n        if (teamsWrapper.teams.includes(match.team1)) {\n            let stats = mapTeams.get(match.team1.getName());\n            stats.addResult(match.goals1, match.goals2);\n            mapTeams.set(match.team1.getName(), stats);\n        }\n        if (teamsWrapper.teams.includes(match.team2)) {\n            let stats = mapTeams.get(match.team2.getName());\n            stats.addResult(match.goals2, match.goals1);\n            mapTeams.set(match.team2.getName(), stats);\n        }\n    }\n\n    mapTeams.forEach(element => {\n        teamsArray.push(element);\n    })\n\n    return teamsArray;\n}","import _ from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { Table } from 'semantic-ui-react'\n\n\nfunction sortReducer(state, action) {\n  switch (action.type) {\n    case 'CHANGE_SORT':\n      if (state.column === action.column) {\n        return {\n          ...state,\n          data: state.data.slice().reverse(),\n          direction:\n            state.direction === 'descending' ? 'ascending' : 'descending',\n        }\n      }\n\n      return {\n        column: action.column,\n        data: _.sortBy(state.data, [action.column]).reverse(),\n        direction: 'descending'\n      }\n    default:\n      throw new Error()\n  }\n}\n\nfunction Standings({tableData}) {\n  const [state, dispatch] = React.useReducer(sortReducer, {\n    column: \"points\",\n    data: tableData,\n    direction: \"descending\"    \n  })\n\n  const [selectedTeam, setSelectedTeam] = useState(\"MOLOKO 2.0\");\n  useEffect(() => {\n\n  }, [selectedTeam])\n\n  const { column, data, direction } = state;\n\n  return (\n    <Table sortable celled fixed unstackable>\n      <Table.Header>\n        <Table.Row>          \n          <Table.HeaderCell\n            width={5}\n            sorted={column === 'team' ? direction : null}\n            onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'team' })}\n          >\n            Equipo\n          </Table.HeaderCell>\n          <Table.HeaderCell\n            width={2}\n            sorted={column === 'points' ? direction : null}\n            onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'points' })}\n          >\n            P\n          </Table.HeaderCell>\n          <Table.HeaderCell\n            width={2}\n            sorted={column === 'vict' ? direction : null}\n            onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'vict' })}\n          >\n            V\n          </Table.HeaderCell>\n          <Table.HeaderCell\n            width={2}\n            sorted={column === 'ties' ? direction : null}\n            onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'ties' })}\n          >\n            E\n          </Table.HeaderCell>\n          <Table.HeaderCell\n            width={2}\n            sorted={column === 'def' ? direction : null}\n            onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'def' })}\n          >\n            D\n          </Table.HeaderCell>\n          <Table.HeaderCell\n            width={2}\n            style={{textOverflow: \"unset\"}}\n            sorted={column === 'goals_fav' ? direction : null}\n            onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'goals_fav' })}\n          >\n            GF\n          </Table.HeaderCell>\n          <Table.HeaderCell\n            width={2}\n            style={{textOverflow: \"unset\"}}\n            sorted={column === 'goals_against' ? direction : null}\n            onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'goals_against' })}\n          >\n            GC\n          </Table.HeaderCell>\n          <Table.HeaderCell\n            width={2}\n            style={{textOverflow: \"unset\"}}\n            sorted={column === 'goals_diff' ? direction : null}\n            onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'goals_diff' })}\n          >\n            GD\n          </Table.HeaderCell>          \n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {data.map(({ team, vict, ties, def, goals_fav, goals_against, goals_diff, points }) => (\n          <Table.Row key={team.name}>\n            <Table.Cell style={{fontWeight: team.name == selectedTeam ? \"bold\":\"unset\"}}>\n            {team.name}\n            </Table.Cell>        \n            <Table.Cell style={{textOverflow: \"unset\"}}>{points}</Table.Cell>\n            <Table.Cell style={{textOverflow: \"unset\"}}>{vict}</Table.Cell>\n            <Table.Cell style={{textOverflow: \"unset\"}}>{ties}</Table.Cell>\n            <Table.Cell style={{textOverflow: \"unset\"}}>{def}</Table.Cell>\n            <Table.Cell style={{textOverflow: \"unset\"}}>{goals_fav}</Table.Cell>\n            <Table.Cell style={{textOverflow: \"unset\"}}>{goals_against}</Table.Cell>\n            <Table.Cell style={{textOverflow: \"unset\"}}>{goals_diff}</Table.Cell>            \n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  )\n}\n\nexport default Standings\n","import _ from 'lodash'\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { TeamsReader } from './modules/TeamsReader';\nimport { TeamsWrapper } from './entities/TeamsWrapper';\nimport { MatchesReader } from './modules/MatchesReader';\nimport { MatchesWrapper } from './entities/MatchesWrapper';\nimport { StaticsBuilder } from './modules/StaticsBuilder';\nimport Standings from './modules/StandingsBuilder';\n\n\nconst tableData = [\n  { name: 'John', age: 15, gender: 'Male' },\n  { name: 'Amber', age: 40, gender: 'Female' },\n  { name: 'Leslie', age: 25, gender: 'Other' },\n  { name: 'Ben', age: 70, gender: 'Male' },\n]\n\n\nconst App = () => {\n  const [stats, setStats] = useState([]);\n  let teamsWrapper, matchesWrapper;\n\n  const loadResources = async () => {\n    if (stats.length == 0) {\n      teamsWrapper = new TeamsWrapper(await TeamsReader());\n      matchesWrapper = new MatchesWrapper(await MatchesReader(teamsWrapper));\n      let tempStats = StaticsBuilder(teamsWrapper, matchesWrapper);\n      tempStats = _.sortBy(tempStats, ['points']).reverse();\n      setStats(tempStats);      \n    }\n    else {\n      console.log(stats); \n      console.log(tableData);\n    }\n  }\n  \n  useEffect(()=> {\n    \n    loadResources();  \n  }, [stats]);\n\n  const getView = () => {\n    if (stats.length != 0) {\n      return (\n      <Standings tableData={stats}>\n      </Standings>\n      )\n    }\n    else {\n      return null;\n    }\n  }\n  return (\n  \n    <div>\n      {getView()}\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}