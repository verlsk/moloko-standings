{"version":3,"sources":["entities/Team.js","modules/TeamsReader.js","entities/TeamsWrapper.js","entities/Match.js","entities/RoundsList.js","modules/MatchesReader.js","entities/MatchesWrapper.js","entities/TeamStatics.js","modules/StaticsBuilder.js","modules/StandingsBuilder.js","modules/ResultsView.js","App.js","reportWebVitals.js","index.js"],"names":["Team","name","this","TeamsReader","a","fetch","response","text","t","data","split","teams_list","push","console","error","TeamsWrapper","teams","i","getName","Match","team1","team2","goals1","goals2","round","date","winner","undefined","RoundsList","MatchesReader","teamsWrapper","matches","line","parseInt","line_array","getTeamByName","MatchesWrapper","numberOfRounds","match","TeamStatics","team","goals_fav","goals_against","ties","def","vict","goals_diff","points","games","StaticsBuilder","matchesWrapper","mapTeams","Map","teamsArray","set","j","includes","stats","get","addResult","forEach","element","sortReducer","state","action","type","column","slice","reverse","direction","_","sortBy","Error","Standings","tableData","React","useReducer","dispatch","useState","selectedTeam","useEffect","Header","style","marginLeft","marginTop","Table","sortable","celled","fixed","unstackable","striped","inverted","size","Row","HeaderCell","width","sorted","onClick","textOverflow","Body","map","Cell","fontWeight","Results","setSelectedTeam","dropdownTeams","setDropdownTeams","matchesFilter","length","tmpDropdown","key","value","handleChange","e","getGrid","elems","roundMatches","filter","Divider","marginBottom","horizontal","as","Icon","Grid","index","Column","getByTeamGrid","teamMatches","getResultsDisplay","panes","menuItem","Menu","Item","render","Tab","Pane","Dropdown","placeholder","clearable","scrolling","fluid","multiple","selection","options","onChange","App","setStats","setNumberOfRounds","setMatchesWrapper","setTeamsWrapper","loadResources","matchesReaderRes","numberOfRoundsTmp","tmpMatchesReader","tempStats","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d369847.chunk.js","sourcesContent":["export class Team {    \n    constructor(name) {\n        this.name = name;\n    }\n\n    getName() {\n        return this.name;\n    }\n}","import { Team } from \"../entities/Team\";\nexport const TeamsReader = async () => {\n    try {\n        const response = await fetch(\"https://verlsk.github.io/moloko-standings/resources/Equipos.txt\");\n        const data = (await response.text()).split(\"\\n\");\n        var teams_list = [];\n        for (let t in data) {\n            teams_list.push(new Team(data[t]));\n        }\n\n        return teams_list;\n    } catch (err) {\n        console.error(err);\n    }\n\n}","export class TeamsWrapper {\n    constructor(teams) {\n        this.teams = teams;\n    }\n\n    getTeamByName(name) {\n        for (var i in this.teams) {\n            if (this.teams[i].getName() === name) {\n                return this.teams[i];\n            }\n        }\n    }\n}","export class Match {\n    constructor(team1, team2, goals1, goals2, round, date) {\n        this.team1 = team1;\n        this.team2 = team2;\n        this.goals1 = goals1;\n        this.goals2 = goals2;\n        this.round = round;\n        this.date = date;\n        if (this.goals1 > this.goals2) {\n            this.winner = this.team1;\n        }\n        else if (this.goals2 > this.goals1) {\n            this.winner = this.team2;\n        }\n        else {\n            this.winner = undefined;\n        }\n    }\n\n    getRound() {\n        return this.round;\n    }\n\n    getTeams() {\n        return [this.team1, this.team2];\n    }\n\n    getGoals() {\n        return [this.goals1, this.goals2];\n    }\n\n}","export const RoundsList = [\n    \"Jornada1.txt\",\n    \"Jornada2.txt\",\n    \"Jornada3.txt\",\n    \"Jornada4.txt\"\n]","import { Match } from \"../entities/Match\";\nimport { RoundsList } from \"../entities/RoundsList\";\n\nexport const MatchesReader = async (teamsWrapper) => {\n    try {\n        var matches = [];\n        for (var i in RoundsList) {\n            let fileName = RoundsList[i];\n            let name = \"https://verlsk.github.io/moloko-standings/resources/\" + fileName;\n            const response = await fetch(name);\n            const data = (await response.text()).split(\"\\n\");\n            \n            var round = 0;\n            var date = 0;\n            for (let t in data) {\n                var line = data[t];\n                if (t === \"0\") {                    \n                    round = parseInt(line.split(\" \")[1]);\n                    date = line.split(\" \")[2].split(\"(\")[1].split(\")\")[0];\n                }\n                else {\n                    var line_array = line.split(\"\\t\");\n                    var team1 = teamsWrapper.getTeamByName(line_array[1]);\n                    var team2 = teamsWrapper.getTeamByName(line_array[2]);\n                    var goals1 = parseInt(line_array[3]);\n                    var goals2 = parseInt(line_array[5]);\n                    matches.push(new Match(team1, team2, goals1, goals2, round, date));\n                }\n            }\n        }       \n\n        return [matches, round];\n\n    } catch (err) {\n        console.error(err);\n    }\n\n}","export class MatchesWrapper {\n    constructor(matches, numberOfRounds) {\n        this.matches = matches;\n        this.numberOfRounds = numberOfRounds;\n    }\n\n    addMatch(match) {\n        this.matches.push(match);\n    }\n}","export class TeamStatics {\n    constructor(team) {\n        this.team = team;\n        this.goals_fav = 0;\n        this.goals_against = 0;\n        this.ties = 0;\n        this.def = 0;\n        this.vict = 0;\n        this.goals_diff = 0;\n        this.points = 0;\n        this.games = 0;\n    }\n\n    addResult(goals_fav, goals_against) {\n        this.goals_fav += goals_fav;\n        this.goals_against += goals_against;\n        if (goals_fav > goals_against) {\n            this.vict++;\n        }\n        else if (goals_fav < goals_against) {\n            this.def++;\n        }\n        else {\n            this.ties++\n        }\n        this.goals_diff = this.goals_fav - this.goals_against;\n        this.points = this.vict*3 + this.ties;\n        this.games++;\n    }\n}","import { TeamStatics } from \"../entities/TeamStatics\";\n\nexport const StaticsBuilder = (teamsWrapper, matchesWrapper) => {\n    const mapTeams = new Map();\n    let teamsArray =  [];\n    for (var i in teamsWrapper.teams) {\n        mapTeams.set(teamsWrapper.teams[i].getName(), new TeamStatics(teamsWrapper.teams[i]))\n    }\n\n    for (var j in matchesWrapper.matches) {    \n        let match = matchesWrapper.matches[j];\n        if (teamsWrapper.teams.includes(match.team1)) {\n            let stats = mapTeams.get(match.team1.getName());\n            stats.addResult(match.goals1, match.goals2);\n            mapTeams.set(match.team1.getName(), stats);\n        }\n        if (teamsWrapper.teams.includes(match.team2)) {\n            let stats = mapTeams.get(match.team2.getName());\n            stats.addResult(match.goals2, match.goals1);\n            mapTeams.set(match.team2.getName(), stats);\n        }\n    }\n\n    mapTeams.forEach(element => {\n        teamsArray.push(element);\n    })\n\n    return teamsArray;\n}","import _ from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { Table, Header } from 'semantic-ui-react'\n\n\nfunction sortReducer(state, action) {\n  switch (action.type) {\n    case 'CHANGE_SORT':\n      if (state.column === action.column) {\n        return {\n          ...state,\n          data: state.data.slice().reverse(),\n          direction:\n            state.direction === 'descending' ? 'ascending' : 'descending',\n        }\n      }\n\n      return {\n        column: action.column,\n        data: _.sortBy(state.data, [action.column]).reverse(),\n        direction: 'descending'\n      }\n    default:\n      throw new Error()\n  }\n}\n\nfunction Standings({tableData}) {\n  const [state, dispatch] = React.useReducer(sortReducer, {\n    column: \"points\",\n    data: tableData,\n    direction: \"descending\"    \n  })\n\n  const [selectedTeam, setSelectedTeam] = useState(\"MOLOKO 2.0\");\n  \n  useEffect(() => {\n\n  }, [selectedTeam])\n\n  const { column, data, direction } = state;\n\n  return (\n    <div>\n      <Header style={{marginLeft: \"5%\", marginTop: \"2rem\"}}>Clasificación</Header>    \n      <Table sortable celled fixed unstackable striped inverted size='small'>\n        <Table.Header>\n          <Table.Row>          \n            <Table.HeaderCell\n              width={5}\n              sorted={column === 'team' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'team' })}\n            >\n              Equipo\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              width={2}\n              sorted={column === 'games' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'games' })}\n            >\n              J\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              width={2}\n              sorted={column === 'points' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'points' })}\n            >\n              P\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              width={2}\n              sorted={column === 'vict' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'vict' })}\n            >\n              V\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              width={2}\n              sorted={column === 'ties' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'ties' })}\n            >\n              E\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              width={2}\n              sorted={column === 'def' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'def' })}\n            >\n              D\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              width={2}\n              style={{textOverflow: \"unset\"}}\n              sorted={column === 'goals_fav' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'goals_fav' })}\n            >\n              GF\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              width={2}\n              style={{textOverflow: \"unset\"}}\n              sorted={column === 'goals_against' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'goals_against' })}\n            >\n              GC\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              width={2}\n              style={{textOverflow: \"unset\"}}\n              sorted={column === 'goals_diff' ? direction : null}\n              onClick={() => dispatch({ type: 'CHANGE_SORT', column: 'goals_diff' })}\n            >\n              GD\n            </Table.HeaderCell>          \n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {data.map(({ team, vict, ties, def, goals_fav, goals_against, goals_diff, points, games }) => (\n            <Table.Row key={team.name}>\n              <Table.Cell style={{textOverflow: \"unset\", fontWeight: team.name === selectedTeam ? \"bold\":\"unset\"}}>\n              {team.name}\n              </Table.Cell>        \n              <Table.Cell style={{textOverflow: \"unset\"}}>{games}</Table.Cell>\n              <Table.Cell style={{textOverflow: \"unset\"}}>{points}</Table.Cell>\n              <Table.Cell style={{textOverflow: \"unset\"}}>{vict}</Table.Cell>\n              <Table.Cell style={{textOverflow: \"unset\"}}>{ties}</Table.Cell>\n              <Table.Cell style={{textOverflow: \"unset\"}}>{def}</Table.Cell>\n              <Table.Cell style={{textOverflow: \"unset\"}}>{goals_fav}</Table.Cell>\n              <Table.Cell style={{textOverflow: \"unset\"}}>{goals_against}</Table.Cell>\n              <Table.Cell style={{textOverflow: \"unset\"}}>{goals_diff}</Table.Cell>            \n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  )\n}\n\nexport default Standings\n","import React, { useEffect, useState } from 'react'\nimport { Header, Grid, Divider, Icon, Dropdown } from 'semantic-ui-react'\nimport { Tab } from 'semantic-ui-react'\nimport { Menu } from 'semantic-ui-react'\n\n\nfunction Results({matchesWrapper, teamsWrapper}) {\n\n  const [selectedTeam, setSelectedTeam] = useState([\"MOLOKO 2.0\"]);\n  const [dropdownTeams, setDropdownTeams] = useState([]);\n  \n  const matchesFilter = {\n    BY_TEAM: 0,\n    BY_ROUND: 1\n  }\n\n  useEffect(() => {\n    if (dropdownTeams.length === 0) {\n      let tmpDropdown = [];\n      tmpDropdown.push({\n        key: \"MOLOKO 2.0\",\n        text: \"MOLOKO 2.0\",\n        value: \"MOLOKO 2.0\"\n      });\n      teamsWrapper.teams.forEach(team => team.name !== \"MOLOKO 2.0\" && tmpDropdown.push({\n        key: team.name,\n        text: team.name,\n        value: team.name\n      }));\n      setDropdownTeams(tmpDropdown);\n    }\n  }, [selectedTeam, dropdownTeams])\n\n  const handleChange = (e, data) => {\n    setSelectedTeam(data.value)\n  }\n\n  const getGrid = () => {\n      let elems = [];\n      for (let i = matchesWrapper.numberOfRounds; i > 0; i--) {\n        let roundMatches = matchesWrapper.matches.filter(match => match.round === i);\n        elems.push(\n            <div>\n                <Divider style={{marginTop: \"2rem\", marginBottom: \"2rem\"}} horizontal>\n                    <Header as='h4'>\n                        <Icon name='tag' />\n                        Jornada {i}\n                    </Header>\n                </Divider>\n                <Grid>\n                    {\n                        roundMatches.map(({team1, team2, goals1, goals2, date, winner}, index) => \n                            \n                            <Grid.Row key={index}>\n                                <Grid.Column style={{fontWeight: winner && winner === team1 ? 'bold':'unset'}} width=\"4\">{team1.getName()}</Grid.Column>\n                                <Grid.Column width=\"2\">{goals1}</Grid.Column>\n                                <Grid.Column width=\"2\">{goals2}</Grid.Column>\n                                <Grid.Column style={{fontWeight: winner && winner === team2 ? 'bold':'unset'}} width=\"4\">{team2.getName()}</Grid.Column>\n                                <Grid.Column width=\"4\">{date}</Grid.Column>\n                            </Grid.Row>   \n                        )\n                    }\n                </Grid>\n            </div>\n        )\n      }\n      return elems;\n  }\n\n  const getByTeamGrid = () => {\n    let elems = [];\n    for (let i = 0; i <  selectedTeam.length; i++) {\n      let teamMatches = matchesWrapper.matches.filter(match => match.team1.getName() === selectedTeam[i] || match.team2.getName() === selectedTeam[i]);\n      teamMatches = teamMatches.reverse();\n      elems.push(\n          <div>\n              <Divider style={{marginTop: \"2rem\", marginBottom: \"2rem\"}} horizontal>\n                  <Header as='h4'>\n                      <Icon name='tag' />\n                      {selectedTeam[i]}\n                  </Header>\n              </Divider>\n              <Grid>\n                  {\n                      teamMatches.map(({team1, team2, goals1, goals2, date, winner}, index) => \n                          \n                          <Grid.Row key={index}>\n                              <Grid.Column style={{fontWeight: winner && winner === team1 ? 'bold':'unset'}} width=\"4\">{team1.getName()}</Grid.Column>\n                              <Grid.Column width=\"2\">{goals1}</Grid.Column>\n                              <Grid.Column width=\"2\">{goals2}</Grid.Column>\n                              <Grid.Column style={{fontWeight: winner && winner === team2 ? 'bold':'unset'}} width=\"4\">{team2.getName()}</Grid.Column>\n                              <Grid.Column width=\"4\">{date}</Grid.Column>\n                          </Grid.Row>   \n                      )\n                  }\n              </Grid>\n          </div>\n      )\n    }\n    return elems;\n}\n\n  const getResultsDisplay = (filter) => {\n    if (filter == matchesFilter.BY_ROUND) {\n      return (<div>       \n          {getGrid()}</div>)\n    }\n    else if (filter == matchesFilter.BY_TEAM) {\n      return (<div>\n        {getByTeamGrid()}\n      </div>)\n    }\n  }\n\n  const panes = [\n    {   \n      menuItem: (\n        <Menu.Item key=\"round\" style={{ width: \"50%\" }}>\n          Por rondas\n        </Menu.Item>\n      ),\n      render: () => \n            <Tab.Pane>\n                {getResultsDisplay(matchesFilter.BY_ROUND)}\n            </Tab.Pane>\n    },\n    {\n      menuItem: (\n        <Menu.Item key=\"team\" style={{ width: \"50%\" }}>\n          Por equipos\n        </Menu.Item>\n      ),\n      render: () => \n      <Tab.Pane>\n        <Dropdown placeholder='Equipos' clearable scrolling fluid multiple selection options={dropdownTeams} value={selectedTeam} onChange={handleChange}/>\n        {getResultsDisplay(matchesFilter.BY_TEAM)}\n      </Tab.Pane>\n    }\n  ];\n\n  const getResultsView = () => {\n    return (\n      <Tab panes={panes} />\n    )\n  }\n\n\n  return (\n    <div>\n        <Header style={{marginLeft: \"5%\", marginTop: \"2rem\"}}>Resultados</Header>\n        {getResultsView()}\n    </div>\n  )\n}\n\nexport default Results\n","import _ from 'lodash'\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { TeamsReader } from './modules/TeamsReader';\nimport { TeamsWrapper } from './entities/TeamsWrapper';\nimport { MatchesReader } from './modules/MatchesReader';\nimport { MatchesWrapper } from './entities/MatchesWrapper';\nimport { StaticsBuilder } from './modules/StaticsBuilder';\nimport Standings from './modules/StandingsBuilder';\nimport Results from './modules/ResultsView';\n\n\nconst App = () => {\n  const [stats, setStats] = useState([]);\n  const [numberOfRounds, setNumberOfRounds] = useState(0);\n  const [matchesWrapper, setMatchesWrapper] = useState(null);\n  const [teamsWrapper, setTeamsWrapper] = useState(null);\n\n  const loadResources = async () => {\n    if (stats.length == 0) {\n      if (teamsWrapper == null)\n        setTeamsWrapper(new TeamsWrapper(await TeamsReader()));\n      else {\n        let matchesReaderRes = await MatchesReader(teamsWrapper);\n        let numberOfRoundsTmp = matchesReaderRes[1]\n        setNumberOfRounds(numberOfRoundsTmp);\n        let tmpMatchesReader = new MatchesWrapper(matchesReaderRes[0], numberOfRoundsTmp);\n        let tempStats = StaticsBuilder(teamsWrapper, tmpMatchesReader);\n        tempStats = _.sortBy(tempStats, ['points']).reverse();\n\n        setMatchesWrapper(tmpMatchesReader);\n        setStats(tempStats);      \n      }      \n    }\n  }\n  \n  useEffect(()=> {\n    \n    loadResources();  \n  }, [stats, matchesWrapper, teamsWrapper]);\n\n  const getView = () => {\n    if (stats.length != 0 && matchesWrapper != null && numberOfRounds != 0) {\n      return (\n        <div>\n          <Standings tableData={stats}>\n          </Standings>\n          <Results matchesWrapper={matchesWrapper} numberOfRounds={numberOfRounds} teamsWrapper={teamsWrapper}>\n          </Results>\n        </div>\n        )\n    }\n    else {\n      return null;\n    }\n  }\n  return (\n  \n    <div>\n      {getView()}\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}